[tool.poetry]
name = "sds-rag"
version = "0.1.0"
description = "Simple Document Search with Retrieval Augmented Generation using Streamlit, Gemini, MiniLM, and Qdrant"
authors = ["MihirRajak91 <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
streamlit = "^1.39.0"
langchain = "^0.3.0"
langchain-community = "^0.3.0"
langchain-text-splitters = "^0.3.0"
google-generativeai = "^0.8.0"
qdrant-client = "^1.7.0"
sentence-transformers = "^2.2.2"
pypdf2 = "^3.0.1"
pdfplumber = "^0.11.0"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
numpy = "^1.24.0,<2.0"
pandas = "^2.0.0"
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
tqdm = "^4.66.1"
loguru = "^0.7.2"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.4"
pytest-cov = "^4.0.0"
black = "^24.1.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.8.0"

[tool.poetry.scripts]
sds-rag = "scripts.run_app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing"
